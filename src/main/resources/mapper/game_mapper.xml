<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hunterstudios.hunters.repository.GameRepository">

    <select id="getGame" resultType="Game">
        SELECT *
        FROM games
        WHERE event_id = #{eventId}
    </select>

    <select id="getLastYear"
            resultType="Integer">
        SELECT YEAR(events.date)
        FROM games
                 INNER JOIN events ON games.event_id = events.id
        ORDER BY date DESC
        LIMIT 1
    </select>

    <select id="getYearList"
            resultType="Integer">
        SELECT DISTINCT YEAR(date) as year
        FROM games
                 INNER JOIN events ON games.event_id = events.id
        ORDER BY year
    </select>
    <select id="selectEvent" resultType="Event">
        SELECT *
        FROM events
        WHERE id = #{id}
    </select>

    <sql id="gameEvent">
        SELECT games.event_id   AS game_event_id,
               games.result     AS game_result,
               games.bat_first  AS game_bat_first,
               games.score_a    AS game_score_a,
               games.score_b    AS game_score_b,
               games.point_got  AS game_point_got,
               games.point_lost AS game_point_lost,
               events.id        AS event_id,
               events.date      AS event_date,
               events.location  AS event_location,
               events.ground    AS event_ground,
               events.type      AS event_type,
               events.opponent  AS event_opponent,
               events.status    AS event_status,
               events.note      AS event_note,
               events.expense   AS event_expense
        FROM games
                 INNER JOIN events ON games.event_id = events.id
    </sql>

    <select id="selectByPeriod" resultMap="gameResult">
        <include refid="gameEvent"/>
        WHERE events.date &gt;= #{begin}
        AND events.date &lt;= #{end}
        AND events.status = 2
        ORDER BY events.date
    </select>

    <select id="selectByTeam" resultMap="gameResult">
        <include refid="gameEvent"/>
        WHERE events.opponent = #{team}
        AND events.status = 2
        ORDER BY events.date
    </select>

    <resultMap id="eventResult" type="Event">
        <id property="id" column="event_id"/>
        <result property="date" column="event_date"/>
        <result property="location" column="event_location"/>
        <result property="ground" column="event_ground"/>
        <result property="type" column="event_type"/>
        <result property="opponent" column="event_opponent"/>
        <result property="status" column="event_status"/>
        <result property="note" column="event_note"/>
        <result property="expense" column="event_expense"/>
    </resultMap>
    <resultMap id="gameResult" type="Game">
        <id property="eventId" column="game_event_id"/>
        <result property="result" column="game_result"/>
        <result property="batFirst" column="game_bat_first"/>
        <result property="scoreA" column="game_score_a"/>
        <result property="scoreB" column="game_score_b"/>
        <result property="pointGot" column="game_point_got"/>
        <result property="pointLost" column="game_point_lost"/>
        <association property="event" resultMap="eventResult"/>
    </resultMap>

    <select id="getCount" resultType="Integer">
        SELECT count(*)
        FROM games
                 INNER JOIN events ON games.event_id = events.id
        WHERE events.date &gt;= #{begin}
          AND events.date &lt;= #{end}
          AND events.status = 2
    </select>

    <insert id="insert">
        INSERT INTO games (event_id, bat_first, score_a, score_b, result, point_got, point_lost)
        VALUES (#{eventId}, #{batFirst}, #{scoreA}, #{scoreB}, #{result}, #{pointGot}, #{pointLost})
    </insert>

    <update id="update">
        UPDATE games
        SET bat_first  = #{batFirst},
            score_a    = #{scoreA},
            score_b    = #{scoreB},
            result     = #{result},
            point_got  = #{pointGot},
            point_lost = #{pointLost}
        WHERE event_id = #{eventId}
    </update>

    <select id="getSummaryByTeam" resultType="GameTeam">
        SELECT events.opponent                                    AS team,
               count(games.result)                                AS numMatches,
               sum(CASE WHEN games.result = 1 THEN 1 ELSE 0 END)  AS numWins,
               sum(CASE WHEN games.result = -1 THEN 1 ELSE 0 END) AS numLoses,
               sum(CASE WHEN games.result = 0 THEN 1 ELSE 0 END)  AS numDraws
        FROM games
                 INNER JOIN events ON games.event_id = events.id
        GROUP BY events.opponent
        ORDER BY numMatches DESC, numWins DESC, numLoses DESC, numDraws DESC
    </select>
</mapper>