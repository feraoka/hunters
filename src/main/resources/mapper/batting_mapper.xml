<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hunterstudios.hunters.repository.BattingRepository">

    <select id="getBattingSummary" resultType="BattingSummary">
        SELECT members.id                                                       AS memberId,
               members.nick_name                                                AS name,
               count(battings.id)                                               AS daseki,
               count(DISTINCT events.id)                                        AS game,
               sum(CASE WHEN battings.result IN (9, 10) THEN 0 ELSE 1 END)      AS dasu,
               sum(battings.point)                                              AS point,
               sum(battings.steal)                                              AS steal,
               sum(CASE WHEN battings.result IN (1, 2, 3, 4) THEN 1 ELSE 0 END) AS hit,
               sum(CASE WHEN battings.result = 1 THEN 1 ELSE 0 END)             AS hit1,
               sum(CASE WHEN battings.result = 2 THEN 1 ELSE 0 END)             AS hit2,
               sum(CASE WHEN battings.result = 3 THEN 1 ELSE 0 END)             AS hit3,
               sum(CASE WHEN battings.result = 4 THEN 1 ELSE 0 END)             AS homerun,
               sum(battings.rbi)                                                AS rbi,
               sum(CASE WHEN battings.result = 11 THEN 1 ELSE 0 END)            AS sout,
               sum(CASE WHEN battings.result = 9 THEN 1 ELSE 0 END)             AS fball,
               sum(CASE WHEN battings.result = 10 THEN 1 ELSE 0 END)            AS dball,
               sum(CASE
                       WHEN battings.result = 1 THEN 1
                       WHEN battings.result = 2 THEN 2
                       WHEN battings.result = 3 THEN 3
                       WHEN battings.result = 4 THEN 4
                       ELSE 0 END)                                              AS ruida
        FROM events
                 RIGHT OUTER JOIN batters ON batters.event_id = events.id
                 RIGHT OUTER JOIN battings ON battings.batter_id = batters.id
                 LEFT OUTER JOIN members ON batters.member_id = members.id
        WHERE events.date &gt;= #{begin}
          AND events.date &lt;= #{end}
          AND members.status = 1
        GROUP BY members.id, members.nick_name
    </select>

    <select id="getBattingSummaryOfLastNGames" resultType="BattingSummary">
        SELECT members.id                                                       AS memberId,
               members.nick_name                                                AS name,
               count(battings.id)                                               AS daseki,
               count(DISTINCT events.id)                                        AS game,
               sum(CASE WHEN battings.result IN (9, 10) THEN 0 ELSE 1 END)      AS dasu,
               sum(battings.point)                                              AS point,
               sum(battings.steal)                                              AS steal,
               sum(CASE WHEN battings.result IN (1, 2, 3, 4) THEN 1 ELSE 0 END) AS hit,
               sum(CASE WHEN battings.result = 1 THEN 1 ELSE 0 END)             AS hit1,
               sum(CASE WHEN battings.result = 2 THEN 1 ELSE 0 END)             AS hit2,
               sum(CASE WHEN battings.result = 3 THEN 1 ELSE 0 END)             AS hit3,
               sum(CASE WHEN battings.result = 4 THEN 1 ELSE 0 END)             AS homerun,
               sum(battings.rbi)                                                AS rbi,
               sum(CASE WHEN battings.result = 11 THEN 1 ELSE 0 END)            AS sout,
               sum(CASE WHEN battings.result = 9 THEN 1 ELSE 0 END)             AS fball,
               sum(CASE WHEN battings.result = 10 THEN 1 ELSE 0 END)            AS dball,
               sum(CASE
                       WHEN battings.result = 1 THEN 1
                       WHEN battings.result = 2 THEN 2
                       WHEN battings.result = 3 THEN 3
                       WHEN battings.result = 4 THEN 4
                       ELSE 0 END)                                              AS ruida
        FROM events
                 RIGHT OUTER JOIN batters ON batters.event_id = events.id
                 RIGHT OUTER JOIN battings ON battings.batter_id = batters.id
                 LEFT OUTER JOIN members ON batters.member_id = members.id
        WHERE events.id IN (SELECT *
                            FROM (SELECT events.id
                                  FROM events
                                           INNER JOIN games ON events.id = games.event_id
                                  ORDER BY events.date DESC
                                  LIMIT #{n}) as t)
          AND members.status = 1
        GROUP BY members.id, members.nick_name
    </select>

    <select id="select" resultType="Batting">
        SELECT battings.*
        FROM battings
                 INNER JOIN batters ON battings.batter_id = batters.id
                 INNER JOIN events ON batters.event_id = events.id
        WHERE events.id = #{eventId}
          AND battings.inning = #{inning}
          AND batters.bat_order = #{order}
          AND battings.number = #{number}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO battings (batter_id, inning, number, result, direction, rbi, point, steal)
        VALUES (#{batterId}, #{inning}, #{number}, #{result}, #{direction}, #{rbi}, #{point}, #{steal})
    </insert>

    <update id="update">
        UPDATE battings
        SET batter_id = #{batterId},
            inning    = #{inning},
            number    = #{number},
            result    = #{result},
            direction = #{direction},
            rbi       = #{rbi},
            point     = #{point},
            steal     = #{steal}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE
        FROM battings
        WHERE id = #{id}
    </delete>

    <select id="selectByInning" resultType="Batting">
        SELECT battings.*
        FROM battings
                 INNER JOIN batters ON battings.batter_id = batters.id
                 INNER JOIN events ON batters.event_id = events.id
        WHERE events.id = #{eventId}
          AND battings.inning = #{inning}
    </select>
</mapper>